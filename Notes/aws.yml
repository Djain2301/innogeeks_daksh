- multiple data centres -> availibilty zone (AZ) -> Region
- register on aws console
- enter card details and do the formalities
- login as root user (if you are using your own account)
  - log in as IAM user if login-ing as an enterprise user

- EC2 
  - Elastic Cloud Compute
  - useful for mainly create instance
  - instance is basically a virtual machine, gives a server to us

  - creating and working with an INSTANCE
    - Launch Instances
    - for example lets create an ubuntu server
    - search for ubuntu, and select the version you want to install
    - as we are going with free version we will go with the free options that they are showing there
    - now we will be directed to various steps
    - select the instance in the 2nd step (t2.micro --> the free version)
    - the network details
    - the storage details (details of volume)
    - the tags
    - the secrity group
    - the final page
    - after clicking on launch, we will be seeing a prompt asking us to set up a private key
    - create the private key and then DOWNLOAD it for SURE, or else we will not be able to download it again
    - launch the instance
    - we will be seeing a lot of details of the instance that we created
    - we can set the name of the instance too
    - clicking on the instance id we will see a new dailog box with all the details of the instance
    - by default 22 port of the instance is allowed (for AWS)
    - if we want to add another port then we have to go to security group -> inbound port -> add <port> and 0.0.0.0/0
    - this way we will be allowed <port> at out public address of the instance
    - to connect to the server with a machine
    - go to connect tab at the dialog box, and follow the steps
      - go to the location where you downloaded the Key file
      - open the terminal and write --> chmod 400 <filename>
      - and then ssh -i "<filename>" ubuntu@<public_ip>
      - we will get connected to the server
    - we are inside the server and configure it as we wish

    - at the network stage, we scroll down and see the "user data" column, we can actually write a script there which will be initiated
      once the instance is connected to the ssh, like we can give commands to install some softwares so that we dont have to do that manually

  - NOTE : THAT WE RECIEVE ONLY 720 HOURS FREE PER MONTH, SO "STOP" THE INSTANCE WHEN NOT IN USE, JUST SHUTTING DOWN THE 
    MACHINE WONT HELP.

  - we can do the jenkins workflow that we did in the build and deploy in the build and deploy part, here instead of localhost:8080
    we will be getting <public_ip>:8080 , so this ip can be shared with other people
  
  - creating a VOLUME
    - the data that the instance holds is stored in a volume 
    - it is created in the "storage" step while creating the instance
    - we can create another volume and attach it to the instance
    - this basically works like an external hard drive that we use, but virtual
    - to attach the volume to the instance there must be some conditions satisfied
    - as the external hard drive must be at the same location as the PC, same the volume must be at the same availibity zone
      as the instance
    - here, as the availibility zone is like us-east-1b, so the AZ should be same for both volume and instance for them to get attached
    - now we can choose the AZ of volume while creating a volume as same as that of the instance
    - and if we want to choose that of instance, it can be done while creating the instance
    - at the network stage of creating the instance, in the subnet, select the same AZ as that of the volume and just proceed with the launch
    - now the volume can be attached

  - creating a snapshot
    - snapshot, as the name signifies, takes a snap of the volume/instance at that particular instance
    - lets say we have to shift our server from one region to another region due to any reason
    - we have to be able to carry all out data (volume) with us
    - the volume can't be attached to an instance out of their AZ, so snapshot come into play
    - we create a sanpshot of the volume
    - now we copy the snapshot at the desired AZ (able to choose while copying)
    - now we will change our zone
    - as we head to snapshot section we will be able to see our copied snapshot there
    - we create a volume out of the snapshot (go to actions)
    - now we see/note the AZ of the volume
    - as we create instance there, keep in mind to choose the subnet correctly
    - attach the volume and you will be able to get all the data in the instance

  - Elastic IP
    - EC2 service
    - create a public IP for yourself, which will be available for us always
    - it is paid

- S3
  - Scalable Storage Service
  - provides "unlimited" cloud storage
  - create bucket
  - create object, add files, add folders etc.
  - changing the permissions to make it accessible
    - go to the permissions of the bucket first
    - go to the block public access -> edit -> uncheck and save
    - scroll down, go to object ownership -> edit -> enable ACLs
    - go to the permissions of the object, and give read permissions to the the public etc.
  - we will be able to access the object with the url specified there